{"version":3,"sources":["Components/Feedback/Feedback.module.css","Components/Feedback/Feedback.js","Components/Statistic/Statistics.js","Components/Notification/Notification.js","Components/Section/Section.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","btn_list","map","option","list","name","type","onClick","uuidv4","Statistics","good","neutral","bad","total","positivePercentage","statistics","text","Notification","message","Section","title","children","App","state","changeFeedbackValue","e","target","setState","prevState","countTotalFeedback","countPositiveFbPercentage","percentage","Math","round","console","dir","this","totalFb","Feedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,uBAAuB,MAAQ,wBAAwB,KAAO,uBAAuB,QAAU,4B,kKCqB/IC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIC,UAAWC,IAAEC,SAAjB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,oBAAIJ,UAAWC,IAAEI,KAAjB,SACE,wBACEC,KAAMF,EAENG,KAAK,SACLC,QAAST,EAJX,SAMGK,GAJIK,gBAHmBL,SCQnBM,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKf,UAAWC,IAAEe,WAAlB,UACE,oBAAGhB,UAAWC,IAAEgB,KAAhB,mBAA6BN,KAC7B,oBAAGX,UAAWC,IAAEgB,KAAhB,sBAAgCL,KAChC,oBAAGZ,UAAWC,IAAEgB,KAAhB,kBAA4BJ,KAC5B,oBAAGb,UAAWC,IAAEgB,KAAhB,oBAA8BH,KAC9B,oBAAGd,UAAWC,IAAEgB,KAAhB,gCAA0CF,EAA1C,WCHSG,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,sBAAMnB,UAAWC,IAAEkB,QAAnB,SAA6BA,KCOvBC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAItB,UAAWC,IAAEoB,MAAjB,SAAyBA,IACxBC,MC0DQC,G,kNAzDbC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPY,oBAAsB,SAACC,GACrB,IAAMpB,EAAOoB,EAAEC,OAAOrB,KACtB,EAAKsB,UAAS,SAACC,GAAD,sBACXvB,EAAOuB,EAAUvB,GAAQ,O,EAI9BwB,mBAAqB,WAEnB,OADY,EAAKN,MAAMb,KAAO,EAAKa,MAAMZ,QAAU,EAAKY,MAAMX,K,EAIhEkB,0BAA4B,WAC1B,IAAMC,EAAaC,KAAKC,MACrB,EAAKV,MAAMb,MAAQ,EAAKa,MAAMb,KAAO,EAAKa,MAAMX,KAAQ,KAG3D,OADAsB,QAAQC,IAAIJ,GACLA,G,4CAGT,WAAU,IAAD,EACwBK,KAAKb,MAA5Bb,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjByB,EAAUD,KAAKP,mBAErB,OACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,CAASqB,MAAM,wBAAf,SACE,cAACkB,EAAD,CACEzC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBsC,KAAKZ,wBAG1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACe,IAAZiB,EACC,cAAC,EAAD,CAAcnB,QAAQ,sBAEtB,cAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,KAAKP,qBACZf,mBAAoBsB,KAAKN,uC,GAjDrBS,cCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5d7a3803.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_list\":\"Feedback_btn_list__yHRva\",\"list\":\"Feedback_list__Spefo\",\"title\":\"Feedback_title__1susm\",\"text\":\"Feedback_text__1WFgM\",\"message\":\"Feedback_message__3N0Ag\"};","import React from \"react\";\r\nimport s from \"../Feedback/Feedback.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul className={s.btn_list}>\r\n    {options.map((option) => (\r\n      <li className={s.list} key={option}>\r\n        <button\r\n          name={option}\r\n          key={uuidv4()}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../Feedback/Feedback.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={s.statistics}>\r\n      <p className={s.text}>Good: {good}</p>\r\n      <p className={s.text}>Neutral: {neutral}</p>\r\n      <p className={s.text}>Bad: {bad}</p>\r\n      <p className={s.text}>Total: {total}</p>\r\n      <p className={s.text}>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport s from \"../Feedback/Feedback.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <span className={s.message}>{message}</span>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: propTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport s from \"../Feedback/Feedback.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from \"react\";\nimport FeedbackOptions from \"./Components/Feedback/Feedback\";\nimport Statistics from \"./Components/Statistic/Statistics\";\nimport Notification from \"./Components/Notification/Notification\";\nimport Section from \"./Components/Section/Section\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  // static defaultProps = {};\n\n  changeFeedbackValue = (e) => {\n    const name = e.target.name;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const sum = this.state.good + this.state.neutral + this.state.bad;\n    return sum;\n  };\n\n  countPositiveFbPercentage = () => {\n    const percentage = Math.round(\n      (this.state.good / (this.state.good + this.state.bad)) * 100\n    );\n    console.dir(percentage);\n    return percentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFb = this.countTotalFeedback;\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.changeFeedbackValue}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFb === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFbPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}